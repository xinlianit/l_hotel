<?php
namespace ManageApi\Controller;

class HotelController extends CommonController {
    //员工登录接口
    public function login(){
        $hotel_id = trim($this->I['hotel_id']); //酒店ID
        $account = trim($this->I['staff_account']); //酒店ID
        $staff_pwd = trim($this->I['staff_pwd']); //酒店ID

        $rs = D('User', 'Api') -> login($account, $staff_pwd, $hotel_id);

        if($rs && 0 == $rs['code']){
            $staff_info = S($rs['data']);
            $this->result['token'] = $rs['data'];
            $this->result['staff_id'] = $staff_info['staff_id'];
            $this->result['staff_name'] = $staff_info['staff_name'];
            $this->result['account_type'] = $staff_info['account_type'];
        }else{
            $error_msg = array();
            foreach ($this -> _login_error as $key => $val) {
                if($key & $rs['code']){
                    $error_msg[] = $val;
                }
            }

            $this->result['resCode'] = 'ERROR';
            $this->result['resMsg'] = implode('、', $error_msg);
        }

        $this->ajaxReturn($this->result);
    }


    //员工退出接口
    public function logout(){
        $token = trim($this->I['token']); //酒店ID
        $rs = D('User', 'Api') -> logout($token);
        if($rs){
            $this -> result = array_merge($this -> result, $this -> status['1']) ;
        }
        $this->ajaxReturn($this->result);
    }


    //获取楼层列表信息
    public function getFloorList(){
        $hotel_id = trim($this->I['hotel_id']); //酒店ID
        $build_id = trim($this->I['build_id']); //酒店ID
        if(isset($hotel_id) && isset($build_id)) {
            $_floor_info = M("floor_info");
            $_map['hotel_id'] = $hotel_id;
            $_map['data_status'] = 1;

            $floor_list = $_floor_info -> field('id as floor_id, floor_name, floor_code, room_number, floor_remark')
                -> where($_map) -> select();

            if($floor_list){
                $this -> result = array_merge($this -> result, ['list' => $floor_list]) ;
            }else{
                $this -> result['list'] = [];
                $this -> result = array_merge($this -> result, $this -> status['100015']) ;
            }
        }else{
            $this -> result = array_merge($this -> result, $this -> status['4']) ;
        }
        $this->ajaxReturn($this->result);
    }


    //获取楼层未处理消息列表
    public function getUntreatedMsgList(){
        $floor_ids = trim($this->I['floor_ids'], ','); //二级服务ID
        if(isset($floor_ids) && !empty($floor_ids)) {
            $_msg_service = M("msg_service");

            $_map['data_status'] = 1;
            $_map['create_time'] = ['lt', time()];
            $_map['floor_id'] = ['in', $floor_ids];

            $msg_service = $_msg_service -> field('id as msg_id, service_name, room_name, room_phone, create_time') -> alias('a')
                                         -> where($_map) -> select();

            if($msg_service){
                $this -> result = array_merge($this -> result, ['list' => $msg_service]);
                /*$_arr_msg_id = array_column($msg_service, 'msg_id');
                $_data = [
                    'data_status' => 2
                ];
                $_msg_service -> startTrans();
                $rs = $_msg_service -> data($_data) -> where(['id' =>['in', $_arr_msg_id]]) -> save();
                if($rs){
                    $_msg_service -> commit();
                    $this -> result = array_merge($this -> result, ['list' => $msg_service]);
                }else{
                    $_msg_service ->rollback();
                    $this -> result = array_merge($this -> result, ['list' => []]);
                    $this -> result = array_merge($this -> result, $this -> status['600008']) ;
                }*/
            }else{
                $this -> result['list'] = [];
                $this -> result = array_merge($this -> result, $this -> status['300012']) ;
            }
        }else{
            $this -> result = array_merge($this -> result, $this -> status['4']) ;
        }
        $this->ajaxReturn($this->result);
    }
}